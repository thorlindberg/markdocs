function markdocs(e){const r=e.replaceAll(/```([\s\S]*?)```/g,"").match(/{([^}]+)}/g);if(null!=r){const n=r.map(e=>JSON.parse(e)),s=n.filter(e=>e.hasOwnProperty("bib")),i=n.filter(e=>e.hasOwnProperty("fig")),o=n.filter(e=>e.hasOwnProperty("sec")||e.hasOwnProperty("sub"));var t,a=0;n.forEach(r=>{if(r.hasOwnProperty("date")&&("m-d-y"==r.date&&(e=e.replace(JSON.stringify(r),`${(new Date).toLocaleString("en-US",{month:"long"})} ${(new Date).getDate()}. ${(new Date).getFullYear()}`)),"d-m-y"==r.date&&(e=e.replace(JSON.stringify(r),`${(new Date).getDate()}. ${(new Date).toLocaleString("en-US",{month:"long"})} ${(new Date).getFullYear()}`)),"y-m-d"==r.date&&(e=e.replace(JSON.stringify(r),`${(new Date).getFullYear()}-${(new Date).getMonth()+1}-${(new Date).getDate()}`))),r.hasOwnProperty("toc")){if("sec-sub"==r.toc){const n=o.map(e=>e.hasOwnProperty("sec")?(t=o.filter(e=>e.hasOwnProperty("sec")).indexOf(e)+1,a=0,`\n[${t}&emsp;${e.sec}](#${e.sec.toLowerCase().replaceAll(" ","")})`):e.hasOwnProperty("sub")?(a+=1,`${1==a?"\n":""}&emsp;[${t}.${a}&emsp;${e.sub}](#${e.sub.toLowerCase().replaceAll(" ","")})`):void 0);e=e.replace(JSON.stringify(r),`${n.join("\n<br>\n")}`)}if("sec"==r.toc){const a=o.filter(e=>e.hasOwnProperty("sec")).map(e=>(t=o.filter(e=>e.hasOwnProperty("sec")).indexOf(e)+1,`\n[${t}&emsp;${e.sec}](#${e.sec.toLowerCase().replaceAll(" ","")})`));e=e.replace(JSON.stringify(r),`${a.join("\n\n")}`)}}if(r.hasOwnProperty("sec")&&(t=o.filter(e=>e.hasOwnProperty("sec")).indexOf(r)+1,a=0,e=e.replace(JSON.stringify(r),`<span id="${r.sec.toLowerCase().replaceAll(" ","")}"></span>${t}&emsp;${r.sec}\n---`)),r.hasOwnProperty("sub")&&(a+=1,e=e.replace(JSON.stringify(r),`<span id="${r.sub.toLowerCase().replaceAll(" ","")}"></span>\n\n#### ${t}.${a}&emsp;${r.sub}`)),r.hasOwnProperty("cite")){const t=s.filter(e=>e.bib==r.cite)[0],a=t.authors.length>2?`${t.authors[0]} et al.`:t.authors.join(" and ");e=e.replace(JSON.stringify(r),`[${a} (${t.year})](#${t.bib})`)}if(r.hasOwnProperty("citep")){const t=s.filter(e=>e.bib==r.citep)[0],a=t.authors.length>2?`${t.authors[0]} et al.`:t.authors.join(" and "),n=r.hasOwnProperty("page")?`, p. ${r.page}`:"";e=e.replace(JSON.stringify(r),`[(${a}, ${t.year}${n})](#${t.bib})`)}if(r.hasOwnProperty("ref")){const t=i.filter(e=>e.fig==r.ref)[0],a=i.indexOf(t)+1;e=e.replace(JSON.stringify(r),`[figure ${a}](#${t.fig})`)}if(r.hasOwnProperty("bib")&&(e=e.replace(JSON.stringify(r),`<span id="${r.bib}"></span>${r.authors.join(" and ")} (${r.year}). _${r.title}_. ${r.publisher}. [${r.url}](${r.url}).`)),r.hasOwnProperty("fig")){const t=i.map(e=>e.fig).indexOf(r.fig)+1;e=e.replace(JSON.stringify(r),`<br>\n\n<span id="${r.fig}"></span><img style="width:${r.width}" src="${r.url}"/>\n\nFigure ${t}: ${r.caption}\n\n<br>`)}r.hasOwnProperty("break")&&(e=e.replace(JSON.stringify(r),"<br><div style='page-break-after:always'></div>"))})}return e}